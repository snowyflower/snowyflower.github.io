<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大一期末作业</title>
      <link href="/2023/10/19/%E5%A4%A7%E4%B8%80%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/"/>
      <url>/2023/10/19/%E5%A4%A7%E4%B8%80%E6%9C%9F%E6%9C%AB%E4%BD%9C%E4%B8%9A/</url>
      
        <content type="html"><![CDATA[<h3 id="期末"><a href="#期末" class="headerlink" title="期末"></a>期末</h3><h1 id="词性标注"><a href="#词性标注" class="headerlink" title="词性标注"></a>词性标注</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba.posseg <span class="hljs-keyword">as</span> pseg<br>text = <span class="hljs-string">&#x27;我杀掉了你的全家&#x27;</span><br>words = pseg.cut(text)<br>words = <span class="hljs-built_in">list</span>(words)<br><span class="hljs-built_in">print</span>(words)<br></code></pre></td></tr></table></figure><h1 id="增加自定义词典"><a href="#增加自定义词典" class="headerlink" title="增加自定义词典"></a>增加自定义词典</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br>text = <span class="hljs-string">&#x27;我是茸华似雪&#x27;</span><br>words = jieba.lcut(text,cut_all=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;分词前:&#x27;</span>,words)<br><span class="hljs-comment">##  ===================================</span><br><span class="hljs-keyword">import</span> jieba<br>jieba.add_word(<span class="hljs-string">&#x27;茸华&#x27;</span>)<br>text = <span class="hljs-string">&#x27;我是茸华似雪&#x27;</span><br>words = jieba.lcut(text,cut_all=<span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;分词后:&#x27;</span>,words)<br></code></pre></td></tr></table></figure><h1 id="词频前10排序"><a href="#词频前10排序" class="headerlink" title="词频前10排序"></a>词频前10排序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:/Users/69099/Desktop/11.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> file:<span class="hljs-comment"># 打开文件</span><br>    txt = file.read()                        <span class="hljs-comment"># 读取文件</span><br>text = jieba.lcut(txt)                                                          <span class="hljs-comment"># 分词</span><br>counts = &#123;&#125;                                                                     <span class="hljs-comment"># 统计词频</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> text:<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(i) &gt; <span class="hljs-number">1</span>:                                                              <span class="hljs-comment"># 统计长度为1的词</span><br>        counts[i] = counts.get(i,<span class="hljs-number">0</span>) + <span class="hljs-number">1</span><br>Text = <span class="hljs-built_in">sorted</span>(counts.items(),key = <span class="hljs-keyword">lambda</span> x:x[<span class="hljs-number">1</span>],reverse = <span class="hljs-literal">True</span>)                <span class="hljs-comment"># 词频排序</span><br><span class="hljs-built_in">print</span>(Text[:<span class="hljs-number">10</span>])    <br></code></pre></td></tr></table></figure><h1 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt                                                 <span class="hljs-comment"># 导入matplotlib库</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np                                                              <span class="hljs-comment"># 导入numpy库</span><br>plt.figure(figsize=(<span class="hljs-number">8</span>, <span class="hljs-number">6</span>), dpi=<span class="hljs-number">100</span>)                                             <span class="hljs-comment"># 创建一个点数为 8 x 6 的窗口, 并设置分辨率为 80像素/每英寸</span><br>plt.subplot(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)                                                            <span class="hljs-comment"># 再创建一个规格为 1 x 1 的子图</span><br>N = <span class="hljs-number">6</span>                                                                           <span class="hljs-comment"># 柱子总数</span><br>values = (<span class="hljs-number">250</span>, <span class="hljs-number">320</span>, <span class="hljs-number">340</span>, <span class="hljs-number">200</span>, <span class="hljs-number">410</span>, <span class="hljs-number">500</span>)                                         <span class="hljs-comment"># 包含每个柱子对应值的序列</span><br>index = np.arange(N)                                                            <span class="hljs-comment"># 包含每个柱子下标的序列</span><br>width = <span class="hljs-number">0.65</span>                                                                    <span class="hljs-comment"># 柱子的宽度</span><br>p2 = plt.bar(index, values, width, label=<span class="hljs-string">&quot;rainfall&quot;</span>, color=<span class="hljs-string">&quot;#87CEFA&quot;</span>)           <span class="hljs-comment"># 绘制柱状图, 每根柱子的颜色为紫罗兰色</span><br>plt.xlabel(<span class="hljs-string">&#x27;Months&#x27;</span>)                                                            <span class="hljs-comment"># 设置横轴标签</span><br>plt.ylabel(<span class="hljs-string">&#x27;rainfall (mm)&#x27;</span>)                                                     <span class="hljs-comment"># 设置纵轴标签</span><br>plt.title(<span class="hljs-string">&#x27;Monthly average rainfall&#x27;</span>)                                           <span class="hljs-comment"># 添加标题</span><br>plt.xticks(index, (<span class="hljs-string">&#x27;Jan&#x27;</span>, <span class="hljs-string">&#x27;Fub&#x27;</span>, <span class="hljs-string">&#x27;Mar&#x27;</span>, <span class="hljs-string">&#x27;Apr&#x27;</span>, <span class="hljs-string">&#x27;May&#x27;</span>, <span class="hljs-string">&#x27;Jun&#x27;</span>))                   <span class="hljs-comment"># 添加纵横轴的刻度</span><br>plt.yticks(np.arange(<span class="hljs-number">0</span>, <span class="hljs-number">810</span>, <span class="hljs-number">100</span>))<br>plt.legend(loc=<span class="hljs-string">&quot;upper right&quot;</span>)                                                   <span class="hljs-comment"># 添加图例</span><br>plt.show()<br></code></pre></td></tr></table></figure><h1 id="词云图"><a href="#词云图" class="headerlink" title="词云图"></a>词云图</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> wordcloud <span class="hljs-keyword">import</span> WordCloud                                                 <span class="hljs-comment"># 导入词云图库</span><br><span class="hljs-keyword">import</span> jieba                                                                    <span class="hljs-comment"># 导入jieba分词库</span><br><span class="hljs-keyword">import</span> jieba.analyse                                                            <span class="hljs-comment"># 导入jieba的核心词提取analyse模块</span><br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np                                                              <span class="hljs-comment"># 导入NumPy函数库</span><br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image                                                           <span class="hljs-comment"># 导入PIL库中Image</span><br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt                                                 <span class="hljs-comment"># 导入matplotlib.pyplot库</span><br><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:/Users/69099/Desktop/11.txt&quot;</span>,<span class="hljs-string">&quot;r&quot;</span>,encoding=<span class="hljs-string">&quot;utf-8&quot;</span>) <span class="hljs-keyword">as</span> file:<span class="hljs-comment"># 打开文件</span><br>    txt = file.read()                        <span class="hljs-comment"># 读取文件</span><br>    seg_list = jieba.analyse.extract_tags(txt)                                  <span class="hljs-comment"># 关键词的提取</span><br>    wc_mask = np.array(Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;C:/Users/69099/Desktop/QQ图片20231221152454.png&quot;</span>))<br>    wc = WordCloud(font_path=<span class="hljs-string">&quot;C:\Windows\Fonts\simkai.TTF&quot;</span>,                    <span class="hljs-comment"># 设置属性</span><br>                          collocations=<span class="hljs-literal">False</span>,<br>                          background_color=<span class="hljs-string">&quot;white&quot;</span>,<br>                          width=<span class="hljs-number">1000</span>,<br>                          height=<span class="hljs-number">800</span>,<br>                          max_font_size=<span class="hljs-number">100</span>,<br>                          contour_color = <span class="hljs-string">&#x27;Blue&#x27;</span>,<br>                          mask = wc_mask,                                       <span class="hljs-comment"># 设置背景图</span><br>                          contour_width = <span class="hljs-number">2</span>,                                    <span class="hljs-comment"># 词云边框大小</span><br>                          max_words=<span class="hljs-number">100</span>).generate(txt)<br>plt.figure(figsize = [<span class="hljs-number">10</span>,<span class="hljs-number">10</span>])<br>plt.imshow(wc)<br>plt.axis(<span class="hljs-string">&quot;off&quot;</span>)<br>plt.show()<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学中Pyrhon数据基础与挖掘</title>
      <link href="/2023/10/19/%E5%A4%A7%E5%AD%A6%E4%B8%ADPyrhon%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%8C%96%E6%8E%98/"/>
      <url>/2023/10/19/%E5%A4%A7%E5%AD%A6%E4%B8%ADPyrhon%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80%E4%B8%8E%E6%8C%96%E6%8E%98/</url>
      
        <content type="html"><![CDATA[<h1 id="这段代码为大一上半学期选修课程Python数据基础与挖掘"><a href="#这段代码为大一上半学期选修课程Python数据基础与挖掘" class="headerlink" title="这段代码为大一上半学期选修课程Python数据基础与挖掘"></a>这段代码为大一上半学期选修课程Python数据基础与挖掘</h1><h1 id="如何使用-if-和-else-命令"><a href="#如何使用-if-和-else-命令" class="headerlink" title="如何使用 if 和 else 命令"></a>如何使用 if 和 else 命令</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">Name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入用户名&quot;</span>)<br>Password = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入密码&quot;</span>)<br><span class="hljs-keyword">if</span> Name == (<span class="hljs-string">&#x27;admin&#x27;</span>) <span class="hljs-keyword">and</span> Password == (<span class="hljs-string">&#x27;123&#x27;</span>):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登陆成功&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登陆失败,账户or密码错误&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="使用-for-sth-in-range-进行循环命令后-使用-break-停止命令"><a href="#使用-for-sth-in-range-进行循环命令后-使用-break-停止命令" class="headerlink" title="使用 for (sth) in range 进行循环命令后 使用 break 停止命令"></a>使用 for (sth) in range 进行循环命令后 使用 break 停止命令</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>):<br>    Name = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入用户名&quot;</span>)<br>    Password = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入密码&quot;</span>)<br>    YanZheng = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入验证码&quot;</span>)<br>    <span class="hljs-keyword">if</span> Name == (<span class="hljs-string">&#x27;admin&#x27;</span>) <span class="hljs-keyword">and</span> Password == (<span class="hljs-string">&#x27;123&#x27;</span>) <span class="hljs-keyword">and</span> YanZheng == (<span class="hljs-string">&quot;321&quot;</span>):<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登陆成功&quot;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;您的余额剩余100万元&quot;</span>)<br>        <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;登陆失败,账户or密码错误&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="字符串中的储存方式-——-下标编号"><a href="#字符串中的储存方式-——-下标编号" class="headerlink" title="字符串中的储存方式 —— 下标编号"></a>字符串中的储存方式 —— 下标编号</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;abcdef&quot;</span><br><span class="hljs-built_in">print</span>(name[<span class="hljs-number">0</span>],name[<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="什么叫切片"><a href="#什么叫切片" class="headerlink" title="什么叫切片"></a>什么叫切片</h1> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">range</span>[起始:结束:步长]<br></code></pre></td></tr></table></figure><h1 id="使用切片加下标编号"><a href="#使用切片加下标编号" class="headerlink" title="使用切片加下标编号"></a>使用切片加下标编号</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;abcdef&quot;</span><br><span class="hljs-built_in">print</span>(name[:<span class="hljs-number">1</span>:<span class="hljs-number">2</span>],name[::-<span class="hljs-number">2</span>])<br><br>string =<span class="hljs-string">&quot;Life is short,we need python!&quot;</span><br><span class="hljs-built_in">print</span>(string[<span class="hljs-number">8</span>:<span class="hljs-number">13</span>:<span class="hljs-number">1</span>])<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-index函数-检测字符串是否包括子字符串"><a href="#字符串内建函数-——-index函数-检测字符串是否包括子字符串" class="headerlink" title="字符串内建函数 —— index函数:检测字符串是否包括子字符串"></a>字符串内建函数 —— index函数:检测字符串是否包括子字符串</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:str —— 指定检索字符串、beg —— 开始检索而且默认为零、结束引索而且默认为字符串的长度</span><br><span class="hljs-comment"># 使用方法跟 find() 一样但是如果str不在string中会出现异常</span><br><span class="hljs-built_in">str</span>.index(<span class="hljs-built_in">str</span>,start = <span class="hljs-number">0</span>,end = <span class="hljs-built_in">len</span>(string))<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-replace函数-将旧字符串替换为新字符串"><a href="#字符串内建函数-——-replace函数-将旧字符串替换为新字符串" class="headerlink" title="字符串内建函数 —— replace函数:将旧字符串替换为新字符串"></a>字符串内建函数 —— replace函数:将旧字符串替换为新字符串</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:old —— 将被替换的字符串、new —— 新字符串且用于替换old字符串、max —— 可选字符串且替换不超过max次</span><br><span class="hljs-built_in">str</span>.replace(old,new[,<span class="hljs-built_in">max</span>])<br>web = <span class="hljs-string">&quot;https://yyxy.sisu.edu.cn/&quot;</span><br>dep = [<span class="hljs-string">&quot;be&quot;</span>,<span class="hljs-string">&quot;dyx&quot;</span>,<span class="hljs-string">&quot;zwx&quot;</span>,<span class="hljs-string">&quot;media&quot;</span>,<span class="hljs-string">&quot;sibm&quot;</span>,<span class="hljs-string">&quot;sis&quot;</span>]<br><span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> dep:<br>    url = web.replace(<span class="hljs-string">&quot;yyxy&quot;</span>,a)<br>    <span class="hljs-built_in">print</span>(url)<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-split函数-通过指定分隔符对字符串进行切片"><a href="#字符串内建函数-——-split函数-通过指定分隔符对字符串进行切片" class="headerlink" title="字符串内建函数 —— split函数:通过指定分隔符对字符串进行切片"></a>字符串内建函数 —— split函数:通过指定分隔符对字符串进行切片</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:str —— 分隔符而且默认为所有空字符、num —— 分割次</span><br><span class="hljs-built_in">str</span>.split(<span class="hljs-built_in">str</span> = <span class="hljs-string">&quot;&quot;</span>,num = string.count(<span class="hljs-built_in">str</span>))<br><br>string =<span class="hljs-string">&quot;Life is short,we need python&quot;</span><br><span class="hljs-built_in">print</span>(string.split(<span class="hljs-string">&quot;s&quot;</span>)[-<span class="hljs-number">1</span>])<br><br>string =<span class="hljs-string">&quot;Life is short,we need python&quot;</span><br><span class="hljs-built_in">print</span>(string.split(<span class="hljs-string">&quot;h&quot;</span>)[<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot;w&quot;</span>)[<span class="hljs-number">0</span>])<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-capitalize与title函数"><a href="#字符串内建函数-——-capitalize与title函数" class="headerlink" title="字符串内建函数 —— capitalize与title函数"></a>字符串内建函数 —— capitalize与title函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># capitalize:第一个字符大写而且其他字符小写</span><br><span class="hljs-built_in">str</span>.capitalize()<br><span class="hljs-comment"># title:所有单词首字母大写而且其余字母小写</span><br><span class="hljs-built_in">str</span>.title()<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-startswith函数-检查字符串是否以制定子串开头"><a href="#字符串内建函数-——-startswith函数-检查字符串是否以制定子串开头" class="headerlink" title="字符串内建函数 —— startswith函数:检查字符串是否以制定子串开头"></a>字符串内建函数 —— startswith函数:检查字符串是否以制定子串开头</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#  具体参数如下:strbeg —— 可选参数用于设置字符串检查的起始值、strend —— 可选参数用于设置字符串检查的结束位置</span><br><span class="hljs-built_in">str</span>.startswith(<span class="hljs-built_in">str</span>,beg = <span class="hljs-number">0</span>,end = <span class="hljs-built_in">len</span>(string))<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-endswith函数-检查字符串是否以制定子串结尾"><a href="#字符串内建函数-——-endswith函数-检查字符串是否以制定子串结尾" class="headerlink" title="字符串内建函数 —— endswith函数:检查字符串是否以制定子串结尾"></a>字符串内建函数 —— endswith函数:检查字符串是否以制定子串结尾</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:suffix —— 该参数可以是一个字符串或者是一个元素、start —— 字符串中的开始位置、end —— 字符串中的结束位置</span><br><span class="hljs-built_in">str</span>.endswith(suffix[,start[,end]])<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-upper函数-将小写字母转为大写字母"><a href="#字符串内建函数-——-upper函数-将小写字母转为大写字母" class="headerlink" title="字符串内建函数 —— upper函数:将小写字母转为大写字母"></a>字符串内建函数 —— upper函数:将小写字母转为大写字母</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">str</span>.upper()<br>mystr = <span class="hljs-string">&quot;I love my lover RongHua&quot;</span><br>NewMystr = mystr.upper<br><span class="hljs-built_in">print</span>(NewMystr)<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-ljust函数-左对齐而且使用空格填充至指定长度的新字符串"><a href="#字符串内建函数-——-ljust函数-左对齐而且使用空格填充至指定长度的新字符串" class="headerlink" title="字符串内建函数 —— ljust函数:左对齐而且使用空格填充至指定长度的新字符串"></a>字符串内建函数 —— ljust函数:左对齐而且使用空格填充至指定长度的新字符串</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:width —— 指定字符串长度、fillchar —— 填充字符而且默认为空格</span><br><span class="hljs-built_in">str</span>.ljust(width[,fillchar])<br></code></pre></td></tr></table></figure><h1 id="字符串内建函数-——-strip函数-截掉字符串左右边的空格或指定字符"><a href="#字符串内建函数-——-strip函数-截掉字符串左右边的空格或指定字符" class="headerlink" title="字符串内建函数 —— strip函数:截掉字符串左右边的空格或指定字符"></a>字符串内建函数 —— strip函数:截掉字符串左右边的空格或指定字符</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 具体参数如下:chars —— 移除字符串头尾指定的字符</span><br><span class="hljs-built_in">str</span>.strip([chars])<br><br>string =<span class="hljs-string">&quot;Life is short,we need python!&quot;</span><br><span class="hljs-built_in">print</span>(string.strip(<span class="hljs-string">&quot;Life i&quot;</span>))<br></code></pre></td></tr></table></figure><h1 id="条件语句if-elif-else的使用"><a href="#条件语句if-elif-else的使用" class="headerlink" title="条件语句if-elif-else的使用:"></a>条件语句if-elif-else的使用:</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">if</span> condition1:<br>    <span class="hljs-comment"># 如果条件 1 成立，则执行此处的代码块</span><br><span class="hljs-keyword">elif</span> condition2:<br>    <span class="hljs-comment"># 如果条件 2 成立，则执行此处的代码块</span><br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-comment"># 如果所有条件都不成立，则执行此处的代码块</span><br><br>mouth = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你的出生月份: &quot;</span>))<br>day = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入你的出生日期: &quot;</span>))<br><span class="hljs-keyword">if</span> mouth == <span class="hljs-number">3</span> <span class="hljs-keyword">and</span> <span class="hljs-number">21</span> &lt;= day &lt;= <span class="hljs-number">31</span> <span class="hljs-keyword">or</span> mouth == <span class="hljs-number">4</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>&lt;= day &lt;=<span class="hljs-number">19</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你的星座是白羊座&quot;</span>)<br><span class="hljs-keyword">elif</span> mouth == <span class="hljs-number">4</span> <span class="hljs-keyword">and</span> <span class="hljs-number">20</span> &lt;= day &lt;= <span class="hljs-number">30</span> <span class="hljs-keyword">or</span> mouth == <span class="hljs-number">5</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>&lt;= day &lt;=<span class="hljs-number">20</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你的星座是金牛座&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;你是其他星座&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="字符串中使用“-”或-t转义字符-空一格"><a href="#字符串中使用“-”或-t转义字符-空一格" class="headerlink" title="字符串中使用“ ”或\t转义字符 空一格"></a>字符串中使用“ ”或\t转义字符 空一格</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">string1 = <span class="hljs-string">&quot;Hello&quot;</span><br>string2 = <span class="hljs-string">&quot;World&quot;</span><br><span class="hljs-built_in">print</span>( string1,<span class="hljs-string">&quot; &quot;</span>,string2 )<br><span class="hljs-built_in">print</span>(string1,<span class="hljs-string">&quot;\t&quot;</span>,string2)<br></code></pre></td></tr></table></figure><h1 id="列表aList元素访问与计数"><a href="#列表aList元素访问与计数" class="headerlink" title="列表aList元素访问与计数"></a>列表aList元素访问与计数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score[<span class="hljs-number">0</span>:<span class="hljs-number">5</span>:]<br><br>score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score[<span class="hljs-number">2</span>]<br></code></pre></td></tr></table></figure><h1 id="列表aList元素的增加指令—append、extend、insert、"><a href="#列表aList元素的增加指令—append、extend、insert、" class="headerlink" title="列表aList元素的增加指令—append、extend、insert、*"></a>列表aList元素的增加指令—append、extend、insert、*</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score.insert(<span class="hljs-number">2</span>,<span class="hljs-number">6</span>)<br>score[::<span class="hljs-number">1</span>]<br></code></pre></td></tr></table></figure><h1 id="列表aList元素的删减指令—pop-、remove"><a href="#列表aList元素的删减指令—pop-、remove" class="headerlink" title="列表aList元素的删减指令—pop()、remove()"></a>列表aList元素的删减指令—pop()、remove()</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score.pop(<span class="hljs-number">1</span>)<br>score<br></code></pre></td></tr></table></figure><h1 id="在列表外-x2F-中去使用循环语句去除指定元素"><a href="#在列表外-x2F-中去使用循环语句去除指定元素" class="headerlink" title="在列表外&#x2F;中去使用循环语句去除指定元素"></a>在列表外&#x2F;中去使用循环语句去除指定元素</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:<br>    <span class="hljs-keyword">if</span> i = <span class="hljs-number">1</span>:<br>        a.remove()<br><span class="hljs-built_in">print</span>(a)<br><br>a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]<br>a = [i <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a <span class="hljs-keyword">if</span> i !=<span class="hljs-number">1</span>]<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><h1 id="在列表中使用count-指令查询指定元素次数"><a href="#在列表中使用count-指令查询指定元素次数" class="headerlink" title="在列表中使用count()指令查询指定元素次数"></a>在列表中使用count()指令查询指定元素次数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>num = score<br>count = num.count(<span class="hljs-number">90</span>)<br><span class="hljs-built_in">print</span>(count)<br></code></pre></td></tr></table></figure><h1 id="在列表中使用len-指令查询总元素数量"><a href="#在列表中使用len-指令查询总元素数量" class="headerlink" title="在列表中使用len()指令查询总元素数量"></a>在列表中使用len()指令查询总元素数量</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>num = <span class="hljs-built_in">len</span>(score)<br><span class="hljs-built_in">print</span>(num)<br></code></pre></td></tr></table></figure><h1 id="在列表中使用sort-函数，对函数从小到大排序并输出"><a href="#在列表中使用sort-函数，对函数从小到大排序并输出" class="headerlink" title="在列表中使用sort()函数，对函数从小到大排序并输出"></a>在列表中使用sort()函数，对函数从小到大排序并输出</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score.sort()<br><span class="hljs-built_in">print</span>(score)<br></code></pre></td></tr></table></figure><h1 id="在列表中使用reverse-函数，颠倒函数顺序"><a href="#在列表中使用reverse-函数，颠倒函数顺序" class="headerlink" title="在列表中使用reverse()函数，颠倒函数顺序"></a>在列表中使用reverse()函数，颠倒函数顺序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">score = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>score.reverse()<br><span class="hljs-built_in">print</span>(score)<br></code></pre></td></tr></table></figure><h1 id="元组的创建与删除-——-使用tuple函数和del删除"><a href="#元组的创建与删除-——-使用tuple函数和del删除" class="headerlink" title="元组的创建与删除 —— 使用tuple函数和del删除"></a>元组的创建与删除 —— 使用tuple函数和del删除</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">aList = [-<span class="hljs-number">1</span>,-<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7.5</span>,-<span class="hljs-number">2.3</span>,<span class="hljs-number">9</span>,-<span class="hljs-number">11</span>]<br><span class="hljs-built_in">tuple</span>(aList)<br><span class="hljs-built_in">print</span> (<span class="hljs-built_in">tuple</span>(aList)[<span class="hljs-number">1</span>])<br><br>a = [<span class="hljs-number">99</span>,<span class="hljs-number">88</span>,<span class="hljs-number">92</span>,<span class="hljs-number">100</span>,<span class="hljs-number">66</span>,<span class="hljs-number">85</span>,<span class="hljs-number">57</span>,<span class="hljs-number">79</span>,<span class="hljs-number">90</span>,<span class="hljs-number">61</span>]<br>b = <span class="hljs-built_in">tuple</span>(a)<br><span class="hljs-built_in">print</span>(b)<br><span class="hljs-keyword">del</span> b <br><span class="hljs-built_in">print</span> b<br></code></pre></td></tr></table></figure><h1 id="序列解包-——-对于列表和字典同样有效"><a href="#序列解包-——-对于列表和字典同样有效" class="headerlink" title="序列解包 —— 对于列表和字典同样有效"></a>序列解包 —— 对于列表和字典同样有效</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 同时对多个变量进行赋值</span><br>v_tuple = (<span class="hljs-literal">False</span>,<span class="hljs-number">3.5</span>,<span class="hljs-string">&#x27;exp&#x27;</span>)<br>(x,y,z) = v_tuple<br><span class="hljs-built_in">print</span>(x)<br><br><span class="hljs-comment"># 列表和字典的解包</span><br>a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>b,c,d = a<br><span class="hljs-built_in">print</span>(a)<br>s = &#123;<span class="hljs-string">&#x27;a&#x27;</span>:<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;c&#x27;</span>:<span class="hljs-number">3</span>&#125;<br>b,c,d = s.items()<br><span class="hljs-built_in">print</span>(b,c,d)<br><br>aList = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>bList = [<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]<br>cList = [<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>]<br>dList = <span class="hljs-built_in">zip</span>(aList,bList,cList)<br><span class="hljs-keyword">for</span> index,value <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(dList):<br>    <span class="hljs-built_in">print</span>(index,<span class="hljs-string">&#x27;:&#x27;</span>,value)<br></code></pre></td></tr></table></figure><h1 id="将元组转换成列表的指令-——-list指令"><a href="#将元组转换成列表的指令-——-list指令" class="headerlink" title="将元组转换成列表的指令 —— list指令"></a>将元组转换成列表的指令 —— list指令</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-number">520</span>,<span class="hljs-string">&#x27;唯世恋茸&#x27;</span>,<span class="hljs-number">521</span>)<br>b = <span class="hljs-built_in">list</span>(a)<br><span class="hljs-built_in">print</span>(a)<br></code></pre></td></tr></table></figure><h1 id="将元组转换成列表后增添-x2F-减少元素"><a href="#将元组转换成列表后增添-x2F-减少元素" class="headerlink" title="将元组转换成列表后增添&#x2F;减少元素"></a>将元组转换成列表后增添&#x2F;减少元素</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">a = (<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-number">520</span>,<span class="hljs-string">&#x27;唯世恋茸&#x27;</span>,<span class="hljs-number">521</span>)<br>b = <span class="hljs-built_in">list</span>(a)<br>b[<span class="hljs-number">0</span>] = <span class="hljs-string">&#x27;茸华是小丑&#x27;</span><br><span class="hljs-built_in">print</span>(b)<br></code></pre></td></tr></table></figure><h1 id="字典创建与删除-——-创造字典"><a href="#字典创建与删除-——-创造字典" class="headerlink" title="字典创建与删除 —— 创造字典"></a>字典创建与删除 —— 创造字典</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">a_dict = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;<br>x = &#123;&#125; <span class="hljs-comment">#空字典</span><br><span class="hljs-built_in">print</span>(a_dict,x)<br></code></pre></td></tr></table></figure><h1 id="字典创建与删除-——-相关dict使用"><a href="#字典创建与删除-——-相关dict使用" class="headerlink" title="字典创建与删除 —— 相关dict使用"></a>字典创建与删除 —— 相关dict使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">d = <span class="hljs-built_in">dict</span>(name = <span class="hljs-string">&#x27;茸华&#x27;</span>,age = <span class="hljs-number">18</span>)<br>x = <span class="hljs-built_in">dict</span>() <span class="hljs-comment"># 空字典</span><br><span class="hljs-built_in">print</span>(d,x)<br><br>keys = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>]<br>values = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>dictionary = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(keys,values))<br><span class="hljs-built_in">print</span>(dictionary)<br></code></pre></td></tr></table></figure><h1 id="字典创建与删除-——-del使用"><a href="#字典创建与删除-——-del使用" class="headerlink" title="字典创建与删除 —— del使用"></a>字典创建与删除 —— del使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">add=<span class="hljs-built_in">dict</span> = <span class="hljs-built_in">dict</span>.fromkeys([<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>,<span class="hljs-string">&#x27;gender&#x27;</span>])<br><span class="hljs-built_in">print</span>(add)<br><span class="hljs-keyword">del</span> add<br></code></pre></td></tr></table></figure><h1 id="字典创建与删除-——-get、items的使用"><a href="#字典创建与删除-——-get、items的使用" class="headerlink" title="字典创建与删除 —— get、items的使用"></a>字典创建与删除 —— get、items的使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python">a_dict = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;<br><span class="hljs-built_in">print</span>(a_dict.get(<span class="hljs-string">&#x27;na&#x27;</span>))<br><span class="hljs-built_in">print</span>(a_dict.get(<span class="hljs-string">&#x27;name&#x27;</span>))<br><br>a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;<br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> a.items():<br>    <span class="hljs-built_in">print</span>(item)<br><br>keys = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>]<br>values = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br>dictionary = <span class="hljs-built_in">dict</span>(<span class="hljs-built_in">zip</span>(keys,values))<br>a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>,<span class="hljs-string">&#x27;gender&#x27;</span>:<span class="hljs-string">&#x27;male&#x27;</span>&#125;<br><span class="hljs-keyword">for</span> keys,values <span class="hljs-keyword">in</span> a.items():<br>    <span class="hljs-built_in">print</span>(keys,values)<br></code></pre></td></tr></table></figure><h1 id="字典创建与删除-——-del、clear-、pop-、popitem的使用"><a href="#字典创建与删除-——-del、clear-、pop-、popitem的使用" class="headerlink" title="字典创建与删除 —— del、clear()、pop()、popitem的使用"></a>字典创建与删除 —— del、clear()、pop()、popitem的使用</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;<br><span class="hljs-keyword">del</span> a[<span class="hljs-string">&#x27;a&#x27;</span>]<br>a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>&#125;<br>a.clear()<br>a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">5</span>&#125;<br>a.pop(<span class="hljs-string">&#x27;b&#x27;</span>)<br>a = &#123;<span class="hljs-string">&#x27;name&#x27;</span>:<span class="hljs-string">&#x27;茸华似雪&#x27;</span>,<span class="hljs-string">&#x27;age&#x27;</span>:<span class="hljs-number">18</span>,<span class="hljs-string">&#x27;b&#x27;</span>:<span class="hljs-number">5</span>&#125;<br>a.popitem()<br></code></pre></td></tr></table></figure><h1 id="Python数据类型"><a href="#Python数据类型" class="headerlink" title="Python数据类型"></a>Python数据类型</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># 整数 int</span><br><span class="hljs-comment"># 小数 float</span><br><span class="hljs-comment"># 字符串 string</span><br><span class="hljs-comment"># 布尔函数 bool</span><br><span class="hljs-comment"># 列表 list</span><br><span class="hljs-comment"># 字典  dictionary</span><br><span class="hljs-comment"># 元组 tuple</span><br><span class="hljs-comment"># 集合 set</span><br><span class="hljs-comment"># 函数 def</span><br></code></pre></td></tr></table></figure><h1 id="函数代入数值"><a href="#函数代入数值" class="headerlink" title="函数代入数值"></a>函数代入数值</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">add2num</span>(<span class="hljs-params">a,b</span>):<br>    c = a + b<br>    <span class="hljs-built_in">print</span>(c)<br>add2num(<span class="hljs-number">11</span>,<span class="hljs-number">22</span>)<br></code></pre></td></tr></table></figure><h1 id="最常用的有参数有返回值的函数"><a href="#最常用的有参数有返回值的函数" class="headerlink" title="最常用的有参数有返回值的函数"></a>最常用的有参数有返回值的函数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">Anum</span>(<span class="hljs-params">num</span>):<br>    result = <span class="hljs-number">0</span><br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span> i &lt;= num:<br>        result = result + i<br>        i += <span class="hljs-number">1</span><br>    <span class="hljs-keyword">return</span> result<br>result = Anum(<span class="hljs-number">100</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;1~100的累积和为:&#x27;</span>,result)<br></code></pre></td></tr></table></figure><h1 id="使用结巴分词库"><a href="#使用结巴分词库" class="headerlink" title="使用结巴分词库"></a>使用结巴分词库</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br>text = <span class="hljs-string">&#x27;我喜欢茸华似雪&#x27;</span><br><span class="hljs-built_in">print</span>(text)<br></code></pre></td></tr></table></figure><h1 id="结巴分词的精确模式"><a href="#结巴分词的精确模式" class="headerlink" title="结巴分词的精确模式"></a>结巴分词的精确模式</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">words = jieba.cut(text,cut_all = <span class="hljs-literal">False</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;精确模式:&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>.join(words))<br></code></pre></td></tr></table></figure><h1 id="结巴分词的全模式"><a href="#结巴分词的全模式" class="headerlink" title="结巴分词的全模式"></a>结巴分词的全模式</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">words = jieba.cut(text,cut_all = <span class="hljs-literal">True</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;全模式:&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>.join(words))<br></code></pre></td></tr></table></figure><h1 id="结巴分词的搜索模式"><a href="#结巴分词的搜索模式" class="headerlink" title="结巴分词的搜索模式"></a>结巴分词的搜索模式</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">words = jieba.cut_for_search(text)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;搜索模式:&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>.join(words))<br></code></pre></td></tr></table></figure><h1 id="结巴分词的读取自带文件"><a href="#结巴分词的读取自带文件" class="headerlink" title="结巴分词的读取自带文件"></a>结巴分词的读取自带文件</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">r&#x27;E:/管理学/debug.log&#x27;</span>,encoding = <span class="hljs-string">&#x27;ansi&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>    text = f.read()<br>text[<span class="hljs-number">0</span>:<span class="hljs-number">20</span>] <span class="hljs-comment">### 查看前前二十个字母 </span><br></code></pre></td></tr></table></figure><h1 id="结巴分词的自定义词典"><a href="#结巴分词的自定义词典" class="headerlink" title="结巴分词的自定义词典"></a>结巴分词的自定义词典</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br>text = <span class="hljs-string">&#x27;南京市长江大桥&#x27;</span><br>jieba.add_word(<span class="hljs-string">&#x27;南京市长&#x27;</span>)<br>words = jieba.cut(text)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;分词后:&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>.join(words))<br></code></pre></td></tr></table></figure><h1 id="结巴分词的词性标注"><a href="#结巴分词的词性标注" class="headerlink" title="结巴分词的词性标注"></a>结巴分词的词性标注</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba.posseg <span class="hljs-keyword">as</span> pseg<br>text = <span class="hljs-string">&#x27;我喜欢茸华似雪&#x27;</span><br>words = pseg.cut(text)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(words))<br>words = <span class="hljs-built_in">list</span>(words)<br><span class="hljs-built_in">print</span>(words)<br><span class="hljs-keyword">for</span> word,flag <span class="hljs-keyword">in</span> words:<br>    <span class="hljs-built_in">print</span>(word,flag)<br></code></pre></td></tr></table></figure><h1 id="结巴分词的命名实体识别"><a href="#结巴分词的命名实体识别" class="headerlink" title="结巴分词的命名实体识别"></a>结巴分词的命名实体识别</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba.analyse<br>text = <span class="hljs-string">&#x27;我喜欢茸华似雪&#x27;</span><br>keywords = jieba.analyse.extract_tags(text,topK=<span class="hljs-number">6</span>)<br><span class="hljs-built_in">print</span>(keywords)<br></code></pre></td></tr></table></figure><h1 id="结巴分词的情感分析"><a href="#结巴分词的情感分析" class="headerlink" title="结巴分词的情感分析"></a>结巴分词的情感分析</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba.analyse<br><span class="hljs-keyword">from</span> snownlp <span class="hljs-keyword">import</span> SnowNLP<br>text =<span class="hljs-string">&quot;我很喜欢这部电影，它让我感到非常感动。&quot;</span><br>keywords = jieba. analyse. extract_tags(text,topK=<span class="hljs-number">5</span>)<br>s= SnowNLP(text)<br>sentiment = s.sentiments<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;关键词:&quot;</span>, keywords)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;情感分析:&quot;</span>, sentiment)<br></code></pre></td></tr></table></figure><h1 id="结巴分词的提取成语"><a href="#结巴分词的提取成语" class="headerlink" title="结巴分词的提取成语"></a>结巴分词的提取成语</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br><span class="hljs-keyword">import</span> jieba.posseg <span class="hljs-keyword">as</span> pseg<br><span class="hljs-comment">### 加载自定义的词典——jieba.load_userdict(&quot;idiom_dict.txt&quot;)</span><br>text = <span class="hljs-string">&quot;他说了一句顺口溜:“十年树木，百年树人”，意思是培养人才要从长远考虑。&quot;</span><br>words = pseg. cut (text) <span class="hljs-comment">### 存储成语及其频次的字典</span><br>idioms= &#123;&#125;<br><span class="hljs-keyword">for</span> word, flag <span class="hljs-keyword">in</span> words:<br>    <span class="hljs-comment">### 如果词性标签是i，说明是成语</span><br>    <span class="hljs-keyword">if</span> flag== <span class="hljs-string">&quot;i&quot;</span> :<br>        <span class="hljs-comment">### 如果成语已经在字典中，则将其频次加 1</span><br>        <span class="hljs-keyword">if</span> word <span class="hljs-keyword">in</span> idioms:<br>            idioms[word] += <span class="hljs-number">1</span><br>        <span class="hljs-comment">### 如果成语不在字典中，则将其加入字典，并将频次初始化为 1</span><br>        <span class="hljs-keyword">else</span>:<br>            idioms[word] = <span class="hljs-number">1</span><br><span class="hljs-keyword">for</span> idiom,count <span class="hljs-keyword">in</span> idioms.items():<br>    <span class="hljs-built_in">print</span>(idiom,count)<br></code></pre></td></tr></table></figure><h1 id="结巴分词的提取成语和介词"><a href="#结巴分词的提取成语和介词" class="headerlink" title="结巴分词的提取成语和介词"></a>结巴分词的提取成语和介词</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jieba<br>text = <span class="hljs-string">&quot;他在考场上表现得很出色，不过他还有很多不足之处，需要继续努力。&quot;</span><br><span class="hljs-comment">### 定义用于存储成语和代词的列表</span><br>idioms = []<br>pronouns = []<br><span class="hljs-comment">### 定义成语和代词的集合</span><br>idioms_set =&#123;<span class="hljs-string">&#x27;半途而废&#x27;</span>,<span class="hljs-string">&#x27;不可思议&#x27;</span>,<span class="hljs-string">&#x27;不胫而走&#x27;</span>, <span class="hljs-string">&#x27;不言而喻&#x27;</span>,<span class="hljs-string">&#x27;大公无私&#x27;</span>, <span class="hljs-string">&#x27;大言不pronouns_set = (&#x27;</span>我<span class="hljs-string">&#x27;, &#x27;</span>你<span class="hljs-string">&#x27;,&#x27;</span>他<span class="hljs-string">&#x27;,&#x27;</span>她<span class="hljs-string">&#x27;, &#x27;</span>它<span class="hljs-string">&#x27;,&#x27;</span>我们<span class="hljs-string">&#x27;,&#x27;</span>你们<span class="hljs-string">&#x27;, &#x27;</span>他们<span class="hljs-string">&#x27;,&#x27;</span>她们<span class="hljs-string">&#x27;,&#x27;</span>它们<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">### 对文本进行分词</span><br><span class="hljs-string">words = jieba.cut(text)</span><br><span class="hljs-string">### 遍历分词后的结果，提取成语和代词</span><br><span class="hljs-string">for word in words :</span><br><span class="hljs-string">    if len(word) == 4 and word in idioms_set :</span><br><span class="hljs-string">### 如果是成语，则加入到成语列表中</span><br><span class="hljs-string">        idioms. append(word)</span><br><span class="hljs-string">    elif word in pronouns_set:</span><br><span class="hljs-string">### 如果是代词，则加入到代词列表中</span><br><span class="hljs-string">        pronouns. append (word)</span><br><span class="hljs-string">### 输出提取结果</span><br><span class="hljs-string">print(&#x27;</span>成语:<span class="hljs-string">&#x27;,idioms)</span><br><span class="hljs-string">print(&#x27;</span>代词:<span class="hljs-string">&#x27;,pronouns)</span><br></code></pre></td></tr></table></figure><h1 id="课堂上词云图作业"><a href="#课堂上词云图作业" class="headerlink" title="课堂上词云图作业"></a>课堂上词云图作业</h1><pre><code class="python">from wordcloud import WordCloud                       #导入import jiebaimport jieba.analyseimport collectionsimport numpy as npfrom PIL import Imageimport matplotlib.pyplot as pltwith open(&quot;C:/Users/69099/Desktop/二十大报告1.txt&quot;,&quot;r&quot;,encoding=&quot;utf-8&quot;) as file:#打开文件    txt = file.read()#读取文件    seg_list = jieba.analyse.extract_tags(txt)    wc_mask = np.array(Image.open(&quot;C:/Users/69099/Desktop/f94efe25cfc14c46934a05f046d05e33.png&quot;))    wc = WordCloud(font_path=&quot;C:\Windows\Fonts\simkai.TTF&quot;,#设置属性                          collocations=False,                          background_color=&quot;white&quot;,                          width=1000,                          height=800,                          max_font_size=100,                          contour_color = &#39;Blue&#39;,                          mask = wc_mask, #设置背景图                          contour_width = 2,   #词云边框大小                          max_words=100).generate(txt)    wc.generate_from_frequencies(word_counts)image_colors = wordcloud.ImageColorGenerator(wc_mask)plt.figure(figsize = [10,10])plt.imshow(wc)plt.axis(&quot;off&quot;)plt.show()</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My New Way</title>
      <link href="/2023/09/30/My-New-Way/"/>
      <url>/2023/09/30/My-New-Way/</url>
      
        <content type="html"><![CDATA[<h1 id="本代码是学习演示过程"><a href="#本代码是学习演示过程" class="headerlink" title="本代码是学习演示过程"></a>本代码是学习演示过程</h1><h1 id="print语句使用——用于输出目标"><a href="#print语句使用——用于输出目标" class="headerlink" title="print语句使用——用于输出目标"></a>print语句使用——用于输出目标</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello World&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="赋予变量值"><a href="#赋予变量值" class="headerlink" title="赋予变量值"></a>赋予变量值</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">money=<span class="hljs-number">50</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;钱包里面有: &quot;</span>, money)<br></code></pre></td></tr></table></figure><h1 id="变量的加减变化"><a href="#变量的加减变化" class="headerlink" title="变量的加减变化"></a>变量的加减变化</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">money=money-<span class="hljs-number">10</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;购买了冰淇淋花费了10元,还剩余: &quot;</span>, money,<span class="hljs-string">&quot;元&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="type-语句的使用——用于查看变量存储数据类型"><a href="#type-语句的使用——用于查看变量存储数据类型" class="headerlink" title="type()语句的使用——用于查看变量存储数据类型"></a>type()语句的使用——用于查看变量存储数据类型</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">string_type=<span class="hljs-built_in">type</span>(<span class="hljs-string">&quot;卧室嫩叠&quot;</span>)<br>int_type=<span class="hljs-built_in">type</span>(<span class="hljs-number">233</span>)<br>float_type=<span class="hljs-built_in">type</span>(<span class="hljs-number">1.666</span>)<br><span class="hljs-built_in">print</span>(string_type,int_type,float_type)<br></code></pre></td></tr></table></figure><h1 id="str-x-语句——用于将数字类型转换为字符串"><a href="#str-x-语句——用于将数字类型转换为字符串" class="headerlink" title="str(x)语句——用于将数字类型转换为字符串"></a>str(x)语句——用于将数字类型转换为字符串</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">num_str=<span class="hljs-built_in">str</span>(<span class="hljs-number">11</span>)<br>float_str=<span class="hljs-built_in">str</span>(<span class="hljs-number">11.11</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(num_str),num_str,<span class="hljs-built_in">type</span>(float_str),float_str)<br></code></pre></td></tr></table></figure><h1 id="int-x-和float-x-语句——用于将字符串转换成数字而——浮点转整数与整数转浮点数"><a href="#int-x-和float-x-语句——用于将字符串转换成数字而——浮点转整数与整数转浮点数" class="headerlink" title="int(x)和float(x)语句——用于将字符串转换成数字而——浮点转整数与整数转浮点数"></a>int(x)和float(x)语句——用于将字符串转换成数字而——浮点转整数与整数转浮点数</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">num_int=<span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;11.1&quot;</span>)<br>num_float=<span class="hljs-built_in">float</span>(<span class="hljs-string">&quot;11&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(num_int),num_int,<span class="hljs-built_in">type</span>(num_float),num_float)<br></code></pre></td></tr></table></figure><h2 id="错误示例——将字符串转换为数字的前提是字符串为数字"><a href="#错误示例——将字符串转换为数字的前提是字符串为数字" class="headerlink" title="错误示例——将字符串转换为数字的前提是字符串为数字"></a>错误示例——将字符串转换为数字的前提是字符串为数字</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">num1=<span class="hljs-built_in">int</span>(<span class="hljs-string">&quot;卧室嫩叠&quot;</span>)<br>num2=<span class="hljs-built_in">float</span>(<span class="hljs-string">&quot;卧室嫩叠&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(num1),num1,<span class="hljs-built_in">type</span>(num2),num2)<br></code></pre></td></tr></table></figure><h1 id="Python规则一-内容限定——限定只能使用-中文、英文、数字、下划线，注意"><a href="#Python规则一-内容限定——限定只能使用-中文、英文、数字、下划线，注意" class="headerlink" title="Python规则一: 内容限定——限定只能使用:中文、英文、数字、下划线，注意:"></a>Python规则一: 内容限定——限定只能使用:中文、英文、数字、下划线，注意:</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">##### 错误示例 1_name=&quot;张三&quot;</span><br><span class="hljs-comment">##### 错误示例 name_!=&quot;张三&quot;</span><br>name_=<span class="hljs-string">&quot;张三&quot;</span><br>_name=<span class="hljs-string">&quot;张三&quot;</span><br>name_1=<span class="hljs-string">&quot;张三&quot;</span><br></code></pre></td></tr></table></figure><h1 id="python规则二-大小写敏感"><a href="#python规则二-大小写敏感" class="headerlink" title="python规则二:大小写敏感"></a>python规则二:大小写敏感</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">Ronghua=<span class="hljs-string">&quot;My Lover&quot;</span><br>ronghua=<span class="hljs-number">520</span><br><span class="hljs-built_in">print</span>(ronghua)<br><span class="hljs-built_in">print</span>(Ronghua)<br></code></pre></td></tr></table></figure><h1 id="python规则三-不可使用关键词"><a href="#python规则三-不可使用关键词" class="headerlink" title="python规则三:不可使用关键词"></a>python规则三:不可使用关键词</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">错误的示例 使用了关键字:<span class="hljs-keyword">class</span>=<span class="hljs-number">1</span><br>错误的示例 使用了关键字:<span class="hljs-keyword">def</span>=<span class="hljs-number">1</span><br>Class=<span class="hljs-number">1</span><br>Def=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h1 id="字符串在Python中有多种定义形式"><a href="#字符串在Python中有多种定义形式" class="headerlink" title="字符串在Python中有多种定义形式:"></a>字符串在Python中有多种定义形式:</h1><h2 id="1-单引号定义法"><a href="#1-单引号定义法" class="headerlink" title="1.单引号定义法:"></a>1.单引号定义法:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&#x27;茸华似雪&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(name))<br></code></pre></td></tr></table></figure><h2 id="2-双引号定义法"><a href="#2-双引号定义法" class="headerlink" title="2.双引号定义法:"></a>2.双引号定义法:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;茸华似雪&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(name))<br></code></pre></td></tr></table></figure><h2 id="3-三引号定义法"><a href="#3-三引号定义法" class="headerlink" title="3.三引号定义法:"></a>3.三引号定义法:</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;&quot;&quot;茸华似雪&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(name))<br>name = <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">唯世恋茸</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(name))<br></code></pre></td></tr></table></figure><h2 id="在字符串内-包含双引号"><a href="#在字符串内-包含双引号" class="headerlink" title="在字符串内 包含双引号"></a>在字符串内 包含双引号</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&#x27;&quot;茸华似雪&quot;&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(name))<br></code></pre></td></tr></table></figure><h2 id="在字符串内-包含单引号"><a href="#在字符串内-包含单引号" class="headerlink" title="在字符串内 包含单引号"></a>在字符串内 包含单引号</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;&#x27;茸华似雪&#x27;&quot;</span><br><span class="hljs-built_in">print</span>(name)<br></code></pre></td></tr></table></figure><h2 id="使用转义字符-x2F-解除引号的效用"><a href="#使用转义字符-x2F-解除引号的效用" class="headerlink" title="使用转义字符&#x2F;解除引号的效用"></a>使用转义字符&#x2F;解除引号的效用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;\&quot;茸华似雪\&quot;&quot;</span><br>name_1 = <span class="hljs-string">&#x27;\&#x27;茸华似雪\&#x27;&#x27;</span><br><span class="hljs-built_in">print</span>(name,name_1)<br></code></pre></td></tr></table></figure><h1 id="字符串字面量之间的拼接"><a href="#字符串字面量之间的拼接" class="headerlink" title="字符串字面量之间的拼接"></a>字符串字面量之间的拼接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;茸华似雪&quot;</span>+<span class="hljs-string">&quot;唯世恋茸&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="字符串字面量和字符串变量的拼接"><a href="#字符串字面量和字符串变量的拼接" class="headerlink" title="字符串字面量和字符串变量的拼接"></a>字符串字面量和字符串变量的拼接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;茸华似雪&quot;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;我的名字是:&quot;</span>+ name +<span class="hljs-string">&quot;,我喜欢唯世恋茸.&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="字符串无法通过加法和数字拼接"><a href="#字符串无法通过加法和数字拼接" class="headerlink" title="字符串无法通过加法和数字拼接"></a>字符串无法通过加法和数字拼接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">错误的示例 tel = <span class="hljs-number">666</span> <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;茸华似雪的电话是:&quot;</span>+ tel)<br></code></pre></td></tr></table></figure><h1 id="字符串格式化一——通过占位的形式完成拼接"><a href="#字符串格式化一——通过占位的形式完成拼接" class="headerlink" title="字符串格式化一——通过占位的形式完成拼接"></a>字符串格式化一——通过占位的形式完成拼接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&quot;茸华似雪&quot;</span><br>message = <span class="hljs-string">&quot;我的名字是:%s&quot;</span> % (name)<br><span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><h1 id="字符串格式二——通过占位的形式完成数字和字符串的拼接"><a href="#字符串格式二——通过占位的形式完成数字和字符串的拼接" class="headerlink" title="字符串格式二——通过占位的形式完成数字和字符串的拼接"></a>字符串格式二——通过占位的形式完成数字和字符串的拼接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python">class_num = <span class="hljs-number">5</span><br>avg_salary = <span class="hljs-number">3500</span><br>message = <span class="hljs-string">&quot;四川外国语大学,金融学%s班,毕业平均工资:%s&quot;</span> %(class_num,avg_salary)<br><span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><h1 id="格式符号-s-d-f的转化"><a href="#格式符号-s-d-f的转化" class="headerlink" title="格式符号$s $d $f的转化"></a>格式符号$s $d $f的转化</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">## $s 将内容转换成字符串并且放入占位位置</span><br><span class="hljs-comment">## $d 将内容转换成整数并且放入占位位置</span><br><span class="hljs-comment">## $f 将内容转换成浮点型并且放入占位位置</span><br>name = <span class="hljs-string">&quot;茸华似雪&quot;</span><br>set_up_year = <span class="hljs-number">2018</span><br>love_year = <span class="hljs-number">5.2</span><br>message = <span class="hljs-string">&quot;我是:%s,我诞生于:%d年,我今天喜欢茸华已经:%f年了!&quot;</span> % (name,set_up_year,love_year)<br><span class="hljs-built_in">print</span>(message)<br></code></pre></td></tr></table></figure><h1 id="字符串格式化-——-数字精度控制-m-控制宽度-n控制小数点-——-n会进行小数的四舍五入"><a href="#字符串格式化-——-数字精度控制-m-控制宽度-n控制小数点-——-n会进行小数的四舍五入" class="headerlink" title="字符串格式化 —— 数字精度控制(m:控制宽度 .n控制小数点) —— .n会进行小数的四舍五入"></a>字符串格式化 —— 数字精度控制(m:控制宽度 .n控制小数点) —— .n会进行小数的四舍五入</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">num1 = <span class="hljs-number">520</span><br>num2 = <span class="hljs-number">521.13136</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数字520宽度限制5,输出结果为:%5d&#x27;</span> % num1 )<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数字520宽度限制1,输出结果为:%1d&#x27;</span> % num1 )<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数字520.13135宽度限制10并且小数精度4,输出结果为:%10.4f&#x27;</span> % num2 )<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;数字520.13135宽度无限制并且小数精度4,输出结果为:%.4f&#x27;</span> % num2 ) <br></code></pre></td></tr></table></figure><h1 id="字符串格式化-——-快速格式化写法"><a href="#字符串格式化-——-快速格式化写法" class="headerlink" title="字符串格式化 —— 快速格式化写法"></a>字符串格式化 —— 快速格式化写法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#### f&quot;内容&#123;变量&#125;&quot; 不限类型不控精度(format)</span><br>name = <span class="hljs-string">&quot;茸华似雪&quot;</span><br>born_year = <span class="hljs-number">2018</span><br>lover = <span class="hljs-string">&#x27;茸华&#x27;</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;我是<span class="hljs-subst">&#123;name&#125;</span>,我出生于:<span class="hljs-subst">&#123;born_year&#125;</span>,我喜欢的人是:<span class="hljs-subst">&#123;lover&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure><h1 id="字符串格式化-——-对表示式格式化-——-表达式-一条具有明确执行结果的代码语句"><a href="#字符串格式化-——-对表示式格式化-——-表达式-一条具有明确执行结果的代码语句" class="headerlink" title="字符串格式化 —— 对表示式格式化 —— 表达式:一条具有明确执行结果的代码语句"></a>字符串格式化 —— 对表示式格式化 —— 表达式:一条具有明确执行结果的代码语句</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;我喜欢你的结果是:%d&quot;</span> % (<span class="hljs-number">10</span> * <span class="hljs-number">52</span>))<br><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;我喜欢你的结果是:<span class="hljs-subst">&#123;<span class="hljs-number">13</span> * <span class="hljs-number">101</span> + <span class="hljs-number">1</span>&#125;</span>&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我最喜欢的人从以前到现在都是:%s&#x27;</span> % (<span class="hljs-string">&#x27;茸华似雪&#x27;</span>) )<br></code></pre></td></tr></table></figure><h1 id="课程练习题一"><a href="#课程练习题一" class="headerlink" title="课程练习题一"></a>课程练习题一</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python">name = <span class="hljs-string">&#x27;茸华阁有限公司&#x27;</span>                  <span class="hljs-comment">#### 公司名字</span><br>stock_price = <span class="hljs-number">521.0</span>                     <span class="hljs-comment">#### 当前股价</span><br>stock_code = <span class="hljs-number">1314</span>                       <span class="hljs-comment">#### 股票代码</span><br>stock_price_daily_growth_factor = <span class="hljs-number">1.2</span>   <span class="hljs-comment">#### 股票每日增长系数(浮点数类型)</span><br>growth_days = <span class="hljs-number">7</span>                         <span class="hljs-comment">#### 股价增长天数</span><br><span class="hljs-comment">##### 计算经过gorwth_days天的增长后，股价达到了多少钱</span><br><span class="hljs-comment">##### 使用字符串格式化进行输出，如果是浮点数，要求小数点精度两位数</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;我们是:%s,股票代码为:%d,当前的股价是:%.1f&quot;</span> % (name,stock_code,stock_price) ,<span class="hljs-string">f&quot;每日增长系数为<span class="hljs-subst">&#123;stock_price_daily_growth_factor&#125;</span>,经过<span class="hljs-subst">&#123;growth_days&#125;</span>天的增长后股价达到了:<span class="hljs-subst">&#123;stock_price * (stock_price_daily_growth_factor * growth_days)&#125;</span>&quot;</span>)<br></code></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/28/hello-world/"/>
      <url>/2023/06/28/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Welcome-to-RongHuaSiXue-com"><a href="#Welcome-to-RongHuaSiXue-com" class="headerlink" title="Welcome to RongHuaSiXue.com!"></a>Welcome to RongHuaSiXue.com!</h1><h1 id="欢迎来到我的个人博客——茸华似雪的茸华坊"><a href="#欢迎来到我的个人博客——茸华似雪的茸华坊" class="headerlink" title="欢迎来到我的个人博客——茸华似雪的茸华坊"></a>欢迎来到我的个人博客——茸华似雪的茸华坊</h1><h2 id="Why-print-Hello-World"><a href="#Why-print-Hello-World" class="headerlink" title="Why print Hello World"></a>Why print Hello World</h2><p>“Hello, world”程序是指在计算机屏幕上输出“Hello world”这行字符串的计算机程序，“Hello World”的中文意思是“你好，世界。”。这个例程在 Brian Kernighan 和 Dennis M. Ritchie合著的The C Programme Language使用而广泛流行。因为它的简洁，实用，并包含了一个该版本的C程序首次在1974年 Brian Kernighan 所撰写的 Programming in C: A Tutorial 出现。</p><h3 id="When-printf-“hello-world-n”"><a href="#When-printf-“hello-world-n”" class="headerlink" title="When printf(“hello, world\n”)"></a>When printf(“hello, world\n”)</h3><p>实际上将“Hello”和“World”一起使用的程序最早出现于1972年，在贝尔实验室成员Brian Kernighan撰写的内部技术文件《Introduction to the Language B》之中。最初的”hello, world”打印内容有个标准，即全小写，有逗号，逗号后空一格，且无感叹号。不过，完全遵循传统标准形式的反而很少出现。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
